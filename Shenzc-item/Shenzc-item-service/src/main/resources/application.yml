server:
  port: 9901


spring:
  application:
    name: item-service
  datasource:
    druid:
      url: jdbc:mysql://localhost:3306/shopping?characterEncoding=utf8&serverTimezone=UTC
      username: root
      password: password
      driver-class-name: com.mysql.jdbc.Driver
      #初始化时建立物理连接的个数
      initial-size: 5
      #最大连接池数量
      max-active: 30
      #最小连接池数量
      min-idle: 5
      #获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 连接保持空闲而不被驱逐的最小时间
      min-evictable-idle-time-millis: 300000
      # 用来检测连接是否有效的sql，要求是一个查询语句
      validation-query: SELECT 1 FROM DUAL
      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-borrow: false
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false
      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      pool-prepared-statements: true
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
      max-pool-prepared-statement-per-connection-size: 50
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计
      filters: stat,wall
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true

      #druid连接池监控
      stat-view-servlet:
        login-username: username
        login-password: password
      #排除一些静态资源，以提高效率



#EurekaClient配置
eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:10001/eureka  #EurekaServer的地址

  instance:
    lease-expiration-duration-in-seconds: 10 #10秒不发送就过期
    lease-renewal-interval-in-seconds: 5 #每个5秒发送一次心跳
    prefer-ip-address: true #当调用getHostname获取hostname时，返回ip而不是hostname
    ip-address: 127.0.0.1 #指定自己的ip信息，不指定的话会自己寻找
    instance-id: ${spring.application.name}:${server.port}

